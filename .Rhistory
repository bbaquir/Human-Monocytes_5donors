install.packages(c("data.table", "digest"))
setwd("C:/Users/beverlie/Desktop/Human-Monocytes_5donors")
#install packages
install.packages("VennDiagram")
library(VennDiagram)
install.packages("tidyverse")
library(tidyverse)
#upload LPS.LPS v Vehicle transcriptomic
#select only Genes, log2FC and padj values
#convert ensembl ids to gene ids by comparing to biomart_table
RNAseq <- read_csv("DEGenes_LPSLPSvsVehicle_10-2_14-06-18.csv")
View(RNAseq)
RNAseq2 <- RNAseq %>%
select(c(1, 3, 7))
View(RNAseq2)
df <- semi_join(RNAseq, biomart_table, by=c("Gene"="hgnc_symbol"))
library(biomaRt)
library(tidyverse)
biomart_table <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol", "entrezgene_id"),
mart = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
)
biomart_table[biomart_table == ""] <- NA
biomart_table <- biomart_table %>%
distinct(ensembl_gene_id, .keep_all = T)
df <- semi_join(RNAseq, biomart_table, by=c("Gene"="hgnc_symbol"))
View(df)
View(biomart_table)
df <- semi_join(RNAseq, biomart_table, by=c("Gene"="ensembl_gene_id"))
View(df)
View(biomart_table)
View(df)
df2 <- inner_join(RNAseq, biomart_table, by.x="Gene", by.y="ensembl_gene_id")
df2 <- inner_join(RNAseq, biomart_table, by.x="Gene", by.y="ensembl_gene_id")
#upload LPS.LPS v Vehicle transcriptomic
#select only Genes, log2FC and padj values
#convert ensembl ids to gene ids by comparing to biomart_table
RNAseq <- read_csv("DEGenes_LPSLPSvsVehicle_10-2_14-06-18.csv")
View(RNAseq)
View(biomart_table)
df2 <- inner_join(RNAseq, biomart_table, by.x="Gene", by.y="ensembl_gene_id")
biomart_table <- select(biomart_table, ensembl_gene_id = Gene)
install.packages("dplyr")
library(dplyr)
df2 <- inner_join(RNAseq, biomart_table, by.x="Gene", by.y="ensembl_gene_id")
biomart_table <- select(biomart_table, ensembl_gene_id = Gene)
biomart_table <- rename(biomart_table, ensembl_gene_id = Gene)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
View(biomart_table)
df <- inner_join(RNAseq, biomart_table, by = "Gene")
View(df)
View(RNAseq)
df2 <- semi_join(RNAseq, biomart_table, by = "Gene")
View(df2)
df <- inner_join(RNAseq, biomart_table, by = "Gene") %>% select (c(3, 7, 10))
RNAseq_genes <- inner_join(RNAseq, biomart_table, by = "Gene")
RNAseq_genes <- RNAseq_genes %>% select (c(3, 7, 10))
View(RNAseq_genes)
RNAseq_genes <- RNAseq_genes %>% select (c(3, 7, 10))
RNAseq_genes %>% select (c(3, 7, 10)
RNAseq_genes %>% select (c(3, 7, 10))
RNAseq_genes %>% select (c(3, 7, 10))
View(RNAseq_genes)
RNAseq_genes %>% dplyr::select (c(3, 7, 10))
View(RNAseq_genes)
RNAseq_genes <- RNAseq_genes %>% dplyr::select (c(3, 7, 10))
View(RNAseq_genes)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
View(RNAseq_genes)
View(RNAseq_genes)
#upload LPS.LPS v Vehicle proteomic list
Proteomics <- read_csv("DEProteins_LPSLPSvsVehicle.csv")
View(Proteomics)
=======
## Extract a single spectrum
raw[[3]]
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
library(BiocManager)
BiocManager::install("RforProteomics", dependencies = TRUE)
>>>>>>> ace2111b5f9c284d78cb26353beb1db2a43650db
install.packages(c("data.table", "digest"))
setwd("C:/Users/beverlie/Desktop/Human-Monocytes_5donors")
#install packages
install.packages("VennDiagram")
library(VennDiagram)
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
#upload LPS.LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
#select only Genes, log2FC and padj values
#convert ensembl ids to gene ids by comparing to biomart_table
RNAseq <- read_csv("DEGenes_LPSLPSvsVehicle_10-2_14-06-18.csv")
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
RNAseq <- rename (RNAseq, Gene=X1)
library(biomaRt)
library(tidyverse)
biomart_table <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol", "entrezgene_id"),
mart = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
)
biomart_table[biomart_table == ""] <- NA
biomart_table <- biomart_table %>%
distinct(ensembl_gene_id, .keep_all = T)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
View(RNAseq)
RNAseq_genes <- inner_join(RNAseq, biomart_table, by = "Gene")
RNAseq_genes <- RNAseq_genes %>% dplyr::select (c(2, 3, 4))
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
RNAseq_genes <- rename(RNAseq_genes, Gene=hgnc_symbol)
RNAseq_genes <- na.omit(RNAseq_genes)
#upload LPS.LPS v Vehicle proteomic list
#select only pvalues <0.05
Proteomic <- read_csv("DEProteins_LPSLPSvsVehicle.csv")
Proteomic_genes <- filter(Proteomic, pvalue_ttest1 <0.05) %>%
dplyr::select(c(2, 6:7))
Proteomic_genes <- na.omit(Proteomic_genes)
View(RNAseq_genes)
UpRNASeq_genes <- rowSums(RNAseq_genes[, c("log2FoldChange")]>0)
rowSums(RNAseq_genes[, c("log2FoldChange")]>0)
sum(RNAseq_genes[, c("log2FoldChange")]>0)
sum(RNAseq_genes[, c("log2FoldChange")]<0)
View(Proteomic_genes)
#counts of upregulated and downregulated genes from Proteomic genes
sum(Proteomic_genes[, c("LPSLPS_Log2FC")]>0)
sum(Proteomic_genes[, c("LPSLPS_Log2FC")]<0)
##upload LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
##select only Genes, log2FC and padj values
##convert ensembl ids to gene ids by comparing to biomart_table
##find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSvsVehicle_10-2_14-06-18.csv")
View(RNAseq)
View(RNAseq)
##upload LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
##select only Genes, log2FC and padj values
##convert ensembl ids to gene ids by comparing to biomart_table
##find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSvsVehicle_10-2_14-06-18.csv")
View(RNAseq)
##upload LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
##select only Genes, log2FC and padj values
##convert ensembl ids to gene ids by comparing to biomart_table
##find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSvsVehicle_10-2_14-06-18.csv")
View(RNAseq)
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
RNAseq <- rename (RNAseq, Gene=X1)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
library(biomaRt)
library(tidyverse)
biomart_table <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol", "entrezgene_id"),
mart = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
)
biomart_table[biomart_table == ""] <- NA
biomart_table <- biomart_table %>%
distinct(ensembl_gene_id, .keep_all = T)
View(RNAseq)
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
View(RNAseq)
##upload LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
##select only Genes, log2FC and padj values
##convert ensembl ids to gene ids by comparing to biomart_table
##find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSvsVehicle_10-2_14-06-18.csv")
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
library(dplyr)
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
RNAseq <- RNAseq %>%
dplyr::select(c(1, 3, 7))
##upload LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
##select only Genes, log2FC and padj values
##convert ensembl ids to gene ids by comparing to biomart_table
##find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSvsVehicle_10-2_14-06-18.csv")
RNAseq <- RNAseq %>%
dplyr::select(c(1, 3, 7))
RNAseq <- rename (RNAseq, Gene=X1)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
View(RNAseq)
View(biomart_table)
RNAseq_genes <- inner_join(RNAseq, biomart_table, by = "Gene")
View(RNAseq_genes)
RNAseq_genes <- RNAseq_genes %>% dplyr::select (c(2:4))
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
View(RNAseq_genes)
RNAseq_genes <- rename(RNAseq_genes, Gene=hgnc_symbol)
View(RNAseq_genes)
RNAseq_genes <- na.omit(RNAseq_genes)
#counts of upregulated and downregulated genes from RNASeq genes
sum(RNAseq_genes[, c("log2FoldChange")]>0)
sum(RNAseq_genes[, c("log2FoldChange")]<0)
#upload LPS.LPS v Vehicle proteomic list
#select only pvalues <0.05
Proteomic <- read_csv("DEProteins_LPSvsVehicle.csv")
View(Proteomic)
Proteomic_genes <- filter(Proteomic, pvalue_ttest1 <0.05) %>%
dplyr::select(c(2, 6:7))
Proteomic_genes <- na.omit(Proteomic_genes)
View(Proteomic)
View(Proteomic_genes)
View(Proteomic_genes)
#counts of upregulated and downregulated genes from Proteomic genes
sum(Proteomic_genes[, c("LPS_Log2FC")]>0)
sum(Proteomic_genes[, c("LPS_Log2FC")]<0)
##############determine shared and unique DE genes btwn RNAseq and Proteomics: LPSLPS vs Vehicle
##############plot in venn diagram
#install.packages("sqldf")
library(sqldf)
#combine and generate new dataframe with both RNAseq and Proteomic lists
RNAseqINProteomic <- sqldf('SELECT * FROM RNAseq_genes INNER JOIN Proteomic_genes ON RNAseq_genes.Gene = Proteomic_genes.Gene')
#check if the number of genes are equal to the new dataframe
length(which(Proteomic_genes$Gene %in% RNAseq_genes$Gene))
#find unique genes for each omics method
UniqueRNAseq_genes <- anti_join(RNAseq_genes, Proteomic_genes, by = "Gene" )
UniqueProteomic_genes <- anti_join(Proteomic_genes, RNAseq_genes, by = "Gene")
#find gene count of shared genes btwn omics methods
SharedGenes <- merge(RNAseq_genes, Proteomic_genes, by= "Gene", all = FALSE)
#add LPSLPSvVehicle Unique DE gene lists btwn omics methods
LPSvVehicleVenn <- draw.pairwise.venn(area1 = 3949,area2 = 430,cross.area = 169,category = c("RNA-Seq", "Proteomics"))
ggsave(LPSLPSvVehicleVenn,
file = "LPSvsVehicle_omics_Vennplot.svg", device = "svg")
ggsave(LPSvVehicleVenn,
file = "LPSvsVehicle_omics_Vennplot.svg", device = "svg")
###upload LPSLPS v LPS transcriptomic list with padj<0.05 cutoff included
###select only Genes, log2FC and padj values
###convert ensembl ids to gene ids by comparing to biomart_table
###find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsLPS_10-2_14-06-18.csv")
setwd("C:/Users/beverlie/Desktop/Human-Monocytes_5donors")
###upload LPSLPS v LPS transcriptomic list with padj<0.05 cutoff included
###select only Genes, log2FC and padj values
###convert ensembl ids to gene ids by comparing to biomart_table
###find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsLPS_10-2_14-06-18.csv")
###upload LPSLPS v LPS transcriptomic list with padj<0.05 cutoff included
###select only Genes, log2FC and padj values
###convert ensembl ids to gene ids by comparing to biomart_table
###find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsLPS_10-2_14-06-18.csv")
setwd("C:/Users/beverlie/Desktop/Human-Monocytes_5donors")
###upload LPSLPS v LPS transcriptomic list with padj<0.05 cutoff included
###select only Genes, log2FC and padj values
###convert ensembl ids to gene ids by comparing to biomart_table
###find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsLPS_10-2_14-06-18.csv")
###upload LPSLPS v LPS transcriptomic list with padj<0.05 cutoff included
###select only Genes, log2FC and padj values
###convert ensembl ids to gene ids by comparing to biomart_table
###find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsLPS_strict_10-2_14-06-18.csv")
View(RNAseq)
View(RNAseq)
RNAseq <- RNAseq %>%
dplyr::select(c(1, 3, 7))
RNAseq <- rename (RNAseq, Gene=X1)
library(biomaRt)
library(tidyverse)
biomart_table <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol", "entrezgene_id"),
mart = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
)
biomart_table[biomart_table == ""] <- NA
biomart_table <- biomart_table %>%
distinct(ensembl_gene_id, .keep_all = T)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
RNAseq_genes <- inner_join(RNAseq, biomart_table, by = "Gene")
RNAseq_genes <- RNAseq_genes %>% dplyr::select (c(2:4))
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
RNAseq_genes <- rename(RNAseq_genes, Gene=hgnc_symbol)
RNAseq_genes <- na.omit(RNAseq_genes)
View(RNAseq_genes)
#counts of upregulated and downregulated genes from RNASeq genes
sum(RNAseq_genes[, c("log2FoldChange")]>0)
sum(RNAseq_genes[, c("log2FoldChange")]<0)
#upload LPS.LPS v Vehicle proteomic list
#select only pvalues <0.05
Proteomic <- read_csv("DEProteins_LPSvsVehicle.csv")
View(Proteomic)
#upload LPS.LPS v Vehicle proteomic list
#select only pvalues <0.05
Proteomic <- read_csv("DEProteins_LPSLPSvsLPS.csv")
View(Proteomic)
Proteomic_genes <- filter(Proteomic, pvalue_ttest1 <0.05) %>%
dplyr::select(c(2, 14:15))
View(Proteomic)
Proteomic_genes <- filter(Proteomic, pvalue_ttest1 <0.05) %>%
dplyr::select(c(2, 14:15))
#upload LPS.LPS v Vehicle proteomic list
#select only pvalues <0.05
Proteomic <- read_csv("DEProteins_LPSLPSvsLPS.csv")
Proteomic_genes <- filter(Proteomic, pvalue_ttest1 <0.05) %>%
dplyr::select(c(2, 14:15))
Proteomic_genes <- na.omit(Proteomic_genes)
View(Proteomic)
View(Proteomic_genes)
#upload LPS.LPS v Vehicle proteomic list
#select only pvalues <0.05
Proteomic <- read_csv("DEProteins_LPSLPSvsLPS.csv")
Proteomic_genes <- filter(Proteomic, pvalue_ttest1 <0.05) %>%
dplyr::select(c(2, 14:15))
Proteomic_genes <- na.omit(Proteomic_genes)
View(Proteomic_genes)
#counts of upregulated and downregulated genes from Proteomic genes
sum(Proteomic_genes[, c("LPS_Log2FC")]>0)
#counts of upregulated and downregulated genes from Proteomic genes
sum(Proteomic_genes[, c("Log2FC")]>0)
sum(Proteomic_genes[, c("Log2FC")]<0)
##############determine shared and unique DE genes btwn RNAseq and Proteomics: LPSLPS vs Vehicle
##############plot in venn diagram
#install.packages("sqldf")
library(sqldf)
#combine and generate new dataframe with both RNAseq and Proteomic lists
RNAseqINProteomic <- sqldf('SELECT * FROM RNAseq_genes INNER JOIN Proteomic_genes ON RNAseq_genes.Gene = Proteomic_genes.Gene')
#check if the number of genes are equal to the new dataframe
length(which(Proteomic_genes$Gene %in% RNAseq_genes$Gene))
#find unique genes for each omics method
UniqueRNAseq_genes <- anti_join(RNAseq_genes, Proteomic_genes, by = "Gene" )
UniqueProteomic_genes <- anti_join(Proteomic_genes, RNAseq_genes, by = "Gene")
#find gene count of shared genes btwn omics methods
SharedGenes <- merge(RNAseq_genes, Proteomic_genes, by= "Gene", all = FALSE)
#add LPSLPSvLPS Unique DE gene lists btwn omics methods
LPSLPSvLPSVenn <- draw.pairwise.venn(area1 = 2220,area2 = 3585,cross.area = 385,category = c("RNA-Seq", "Proteomics"))
ggsave(LPSLPSvLPSVenn,
file = "LPSLPSvsLPS_omics_Vennplot.svg", device = "svg")
#upload LPS.LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
#select only Genes, log2FC and padj values
#convert ensembl ids to gene ids by comparing to biomart_table
#find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsVehicle_10-2_14-06-18.csv")
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
RNAseq <- rename (RNAseq, Gene=X1)
View(RNAseq)
#RNAseq <- rename (RNAseq, Gene=X1)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
View(RNAseq)
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
setwd("C:/Users/beverlie/Desktop/Human-Monocytes_5donors")
#install packages
install.packages("VennDiagram")
library(VennDiagram)
library(tidyverse)
library(dplyr)
#upload LPS.LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
#select only Genes, log2FC and padj values
#convert ensembl ids to gene ids by comparing to biomart_table
#find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsVehicle_10-2_14-06-18.csv")
View(RNAseq)
RNAseq <- RNAseq %>%
select(c(1, 3, 7))
RNAseq <- RNAseq %>%
dplyr::select(c(1, 3, 7))
View(biomart_table)
#RNAseq <- rename (RNAseq, Gene=X1)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
View(biomart_table)
setwd("C:/Users/beverlie/Desktop/Human-Monocytes_5donors")
library(VennDiagram)
library(tidyverse)
library(dplyr)
#upload LPS.LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
#select only Genes, log2FC and padj values
#convert ensembl ids to gene ids by comparing to biomart_table
#find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsVehicle_10-2_14-06-18.csv")
RNAseq <- RNAseq %>%
dplyr::select(c(1, 3, 7))
View(RNAseq)
library(biomaRt)
library(tidyverse)
biomart_table <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol", "entrezgene_id"),
mart = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
)
biomart_table[biomart_table == ""] <- NA
biomart_table <- biomart_table %>%
distinct(ensembl_gene_id, .keep_all = T)
#RNAseq <- rename (RNAseq, Gene=X1)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
View(biomart_table)
RNAseq_genes <- inner_join(RNAseq, biomart_table, by = "Gene")
View(RNAseq_genes)
RNAseq_genes <- RNAseq_genes %>% dplyr::select (c(2, 3, 4))
View(RNAseq_genes)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
View(RNAseq_genes)
RNAseq_genes <- RNAseq_genes %>% filter (RNAseq_genes, log2FoldChange >1.5 | < -1.5)
filter (RNAseq_genes, log2FoldChange >1.5 | < -1.5)
library(dplyr)
RNAseq_genes <- RNAseq_genes %>% dplyr::filter (RNAseq_genes, log2FoldChange >1.5 | < -1.5)
RNAseq_genes <- RNAseq_genes %>% filter(RNAseq_genes, log2FoldChange >1.5 | < -1.5)
RNAseq_genes <- RNAseq_genes %>% filter(log2FoldChange >1.5 | < -1.5)
RNAseq_genes <- RNAseq_genes %>% filter(log2FoldChange >1.5 | log2FoldChange < -1.5)
View(RNAseq_genes)
RNAseq_genes <- rename(RNAseq_genes, Gene=hgnc_symbol)
RNAseq_genes <- na.omit(RNAseq_genes)
View(RNAseq_genes)
#counts of upregulated and downregulated genes from RNASeq genes
sum(RNAseq_genes[, c("log2FoldChange")]>0)
sum(RNAseq_genes[, c("log2FoldChange")]<0)
#upload LPS.LPS v Vehicle transcriptomic list with padj<0.05 cutoff included
#select only Genes, log2FC and padj values
#convert ensembl ids to gene ids by comparing to biomart_table
#only include Log2FC values >1.5 and <-1.5
#find out how many DE genes are upregulated and downregulated
RNAseq <- read_csv("DEGenes_LPSLPSvsVehicle_10-2_14-06-18.csv")
RNAseq <- RNAseq %>%
dplyr::select(c(1, 3, 7))
#RNAseq <- rename (RNAseq, Gene=X1)
biomart_table <- rename(biomart_table, Gene=ensembl_gene_id)
RNAseq_genes <- inner_join(RNAseq, biomart_table, by = "Gene")
RNAseq_genes <- RNAseq_genes %>% filter(log2FoldChange>1.5 | log2FoldChange < -1.5) %>% select (c(2:4))
RNAseq_genes <- RNAseq_genes %>% filter(log2FoldChange>1.5 | log2FoldChange < -1.5) %>% dplyr::select (c(2:4))
View(RNAseq_genes)
subset(RNAseq_genes, select=c(3, 1, 2))
RNAseq_genes <- RNAseq_genes %>% filter(log2FoldChange>1.5 | log2FoldChange < -1.5) %>% dplyr::select (c(2:4)) %>% subset(RNAseq_genes, select=c(3, 1, 2))
RNAseq_genes <- RNAseq_genes %>% filter(log2FoldChange>1.5 | log2FoldChange < -1.5) %>% dplyr::select (c(2:4)) %>% subset(RNAseq_genes, select=c(3, 1, 2))
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
View(RNAseq_genes)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2)), rename (RNAseq_genes, Gene=hgnc_symbol)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2), rename (Gene=hgnc_symbol))
View(RNAseq_genes)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2), rename (RNAseq_genes, Gene=hgnc_symbol))
View(RNAseq_genes)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
rename(RNAseq_genes, Gene=hgnc_symbol)
View(RNAseq_genes)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
View(RNAseq_genes)
RNAseq_genes <- inner_join(RNAseq, biomart_table, by = "Gene")
RNAseq_genes <- RNAseq_genes %>% filter(log2FoldChange>1.5 | log2FoldChange < -1.5) %>% dplyr::select (c(2:4))
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2))
View(RNAseq_genes)
rename(RNAseq_genes, Gene=hgnc_symbol)
View(RNAseq_genes)
RNAseq_genes <- subset(RNAseq_genes, select=c(3, 1, 2) & rename(RNAseq_genes, Gene = hgnc_symbol))
RNAseq_genes <- rename(RNAseq_genes, Gene=hgnc_symbol)
View(RNAseq_genes)
RNAseq_genes <- na.omit(RNAseq_genes)
#counts of upregulated and downregulated genes from RNASeq genes
sum(RNAseq_genes[, c("log2FoldChange")]>0)
sum(RNAseq_genes[, c("log2FoldChange")]<0)
#upload LPS.LPS v Vehicle proteomic list
#select only pvalues <0.05
Proteomic <- read_csv("DEProteins_LPSLPSvsVehicle.csv")
Proteomic_genes <- filter(Proteomic, pvalue_ttest1 <0.05) %>%
dplyr::select(c(2, 6:7))
Proteomic_genes <- na.omit(Proteomic_genes)
View(Proteomic_genes)
#counts of upregulated and downregulated genes from Proteomic genes
sum(Proteomic_genes[, c("LPSLPS_Log2FC")]>0)
sum(Proteomic_genes[, c("LPSLPS_Log2FC")]<0)
library(sqldf)
#combine and generate new dataframe with both RNAseq and Proteomic lists
RNAseqINProteomic <- sqldf('SELECT * FROM RNAseq_genes INNER JOIN Proteomic_genes ON RNAseq_genes.Gene = Proteomic_genes.Gene')
#check if the number of genes are equal to the new dataframe
length(which(Proteomic_genes$Gene %in% RNAseq_genes$Gene))
#find unique genes for each omics method
UniqueRNAseq_genes <- anti_join(RNAseq_genes, Proteomic_genes, by = "Gene" )
UniqueProteomic_genes <- anti_join(Proteomic_genes, RNAseq_genes, by = "Gene")
#find gene count of shared genes btwn omics methods
SharedGenes <- merge(RNAseq_genes, Proteomic_genes, by= "Gene", all = FALSE)
/rnorm()
?rnorm()
rnorm(1,mean = 10, sd = 2)
rnorm(10,mean = 10, sd = 2)
rnorm(100,mean = .05, sd = .01)
p.vals <- rnorm(100,mean = .05, sd = .01)
p.vals %>% p.adjust(method = "BH")
library(magrittr)
p.vals %>% p.adjust(method = "BH")
p.vals %>% p.adjust(method = "fdr")
p.vals <- rnorm(1000,mean = .01, sd = .1)
p.vals %>% p.adjust(method = "fdr")
p.adjust(p.vals, method = "fdr")
p.adjust(p.vals, method = "fdr")
which(p.adjust(p.vals, method = "fdr") <= 0.5)
p.adjust(p.vals, method = "fdr") <= 0.5
p.vals <- rnorm(1000,mean = .01, sd = .5)
which(p.adjust(p.vals, method = "fdr") <= 0.5)
p.adjust(p.vals, method = "fdr") <= 0.5
table(p.adjust(p.vals, method = "fdr") <= 0.5)
View(Proteomic_genes)
Proteomic_genes$pvalue_ttest1
Proteomic_genes$pvalue_ttest1 %>% p.adjust(method = "BH")
table(Proteomic_genes$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.05)
View(Proteomic)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.05)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.10)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.01)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.05)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.010)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.10)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.05)
View(Proteomic)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "fdr") <= 0.05)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "fdr") <= 0.10)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH") <= 0.10)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "bonferroni") <= 0.10)
table(Proteomic$pvalue_ttest1 %>% p.adjust(method = "bonferroni") <= 0.05)
Proteomic$pvalue_ttest1 %>% p.adjust(method = "bonferroni")
Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH")
Proteomic$adjusted <- Proteomic$pvalue_ttest1 %>% p.adjust(method = "BH")
Proteomic %>% View()
